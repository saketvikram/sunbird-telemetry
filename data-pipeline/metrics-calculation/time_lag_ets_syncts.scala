val tel = spark.read.format("json").load("/Users/saket/Documents/diksha-prod-telemetry/18-Oct/*")
val diff_secs_col = col("syncts").cast("long") - col("ets").cast("long") 
val timecol = tel.withColumn("diff_days", round(diff_secs_col / (1000D*24D * 3600D)))
val mobdata = timecol.filter(col("context.pdata.id") === "prod.diksha.app")
val fildata = mobdata.filter(col("syncts").isNotNull).filter(col("ets").isNotNull)
val total_devices = fildata.select(countDistinct("context.did")).show()
val unique_count_814 = fildata.filter(col("diff_days") >= 8 && col("diff_days") <= 14).agg(countDistinct($"context.did").as("device_count")).show()
val unique_count_1521 = fildata.filter(col("diff_days") >= 15 && col("diff_days") <= 21).agg(countDistinct($"context.did").as("device_count")).show()
val unique_count_2228 = fildata.filter(col("diff_days") >= 22 && col("diff_days") <= 28).agg(countDistinct($"context.did").as("device_count")).show()
val unique_count_2955 = fildata.filter(col("diff_days") >= 29 && col("diff_days") <= 55).agg(countDistinct($"context.did").as("device_count")).show()
val unique_count_56p = fildata.filter(col("diff_days") >= 56).agg(countDistinct($"context.did").as("device_count")).show()
//  val day_count = fildata.groupBy($"diff_days").agg(count($"diff_days").as("count")).orderBy(asc("diff_days")).show(200)
val day_count = fildata.groupBy($"diff_days").agg(count($"diff_days").as("count")).orderBy(asc("diff_days")).show(200)
val device_count = fildata.groupBy($"diff_days").agg(countDistinct($"context.did").as("device_count")).orderBy(asc("diff_days")).show(200)
